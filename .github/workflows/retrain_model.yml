name: Retrain and push to Docker Hub

#on:
  #schedule:
    #- cron: '0 9 * * 1' # Every Monday at 09:00 UTC
    #- cron: '28 6 * * 2'
    #- cron: '28 7 * * 2'
    #- cron: '55 7 * * 2'
    # - cron: '*/5 * * * *' # run every two hours in June
    
  #push:
    #paths:
      #- 'data/new_data/new_data.csv'
on:
  push:
    branches:
      - retrain-the-model
    paths:
      - 'data/new_data/new_data.csv'
 
on:
  push:
    branches:
      - retrain-the-model

permissions:
  contents: write  # Grant write permission to contents

jobs:
  retrain-with-docker-compose:
    name: Build Docker Compose
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Build and start Docker Compose
        run: |
          docker-compose -f docker-compose.yml up --build
        env:
          COMPOSE_PROJECT_NAME: nba_app

      - name: Commit and push preprocessed files
        run: |
          git config --global user.name "Github Action"
          git config --global user.email mihrandovlatyan@gmail.com
          
          git add "code/log.txt"
          git add "data/predictions/predictions.csv"
          git add "data/processed/NBA Shot Locations 1997 - 2020-processed.csv"
          git add "data/processed/NBA Shot Locations 1997 - 2020-train-test.joblib"
          git add "data/raw/NBA Shot Locations 1997 - 2020.csv"
          git add "trained_models/model_best_lr.joblib"

          git commit -m 'Add logs, preprocessed and trained model files'
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_REPO_TOKEN }}

  push-to-dockerhub:
    name: Push Docker Compose to Docker Hub
    runs-on: ubuntu-latest
    needs: retrain-with-docker-compose

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        run: echo ${{ secrets.DOCKERHUB_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Get the short SHA for tagging
        id: vars
        run: echo "::set-output name=short_sha::$(git rev-parse --short HEAD)"

      - name: Get the current date for tagging
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d')"

      - name: Tag and push Docker images
        run: |
          IMAGE_TAG=${{ steps.date.outputs.date }}-${{ steps.vars.outputs.short_sha }}
          DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}

          # Define services and images
          declare -A services_images
          services_images=(
            ["data_ingestion"]=$DOCKERHUB_USERNAME/data_ingestion
            ["data_processing"]=$DOCKERHUB_USERNAME/data_processing
            ["feature_engineering"]=$DOCKERHUB_USERNAME/feature_engineering
            ["model_training"]=$DOCKERHUB_USERNAME/model_training
            ["inference"]=$DOCKERHUB_USERNAME/inference
          )

          # Build, tag, and push each service image
          for service in "${!services_images[@]}"; do
            IMAGE_NAME=${services_images[$service]}
            docker-compose build ${service}
            docker tag ${IMAGE_NAME}:latest ${IMAGE_NAME}:${IMAGE_TAG}
            docker push ${IMAGE_NAME}:${IMAGE_TAG}
            docker tag ${IMAGE_NAME}:${IMAGE_TAG} ${IMAGE_NAME}:latest
            docker push ${IMAGE_NAME}:latest
          done
