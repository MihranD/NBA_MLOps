version: '3'
services:
  db:
    build:
      context: ..
      dockerfile: docker/Dockerfile.db
    environment:
      - POSTGRES_USER=ubuntu
      - POSTGRES_PASSWORD=mlops
      - POSTGRES_DB=nba_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - nba-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ubuntu -d nba_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  api:
    build:
      context: ..
      dockerfile: docker/Dockerfile.api
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_HOST=db
      - DB_NAME=nba_db
      - DB_USER=ubuntu
      - DB_PASSWORD=mlops
      - PREDICTION_SERVICE_HOST=prediction-service
      - PREDICTION_SERVICE_PORT=8001
    volumes:
      - ../code/api:/app/code/api
    networks:
      - nba-network
  
  prediction-service:
    build:
      context: ..
      dockerfile: docker/Dockerfile.prediction-service
    ports:
      - "8001:8001"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_HOST=db
      - DB_NAME=nba_db
      - DB_USER=ubuntu
      - DB_PASSWORD=mlops
    volumes:
      - ../code/api:/app/code/api
    networks:
      - nba-network

  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ../prometheus_setup/prometheus.yml:/etc/prometheus/prometheus.yml
      - ../prometheus_setup/alerting_rules.yml:/etc/prometheus/alerting_rules.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - nba-network

  grafana:
    image: grafana/grafana
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ../grafana_setup/dashboards:/etc/grafana/dashboards
      - ../grafana_setup/provisioning:/etc/grafana/provisioning
    networks:
      - nba-network
  
  alertmanager:
    image: prom/alertmanager
    volumes:
      - ../alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    ports:
      - 9093:9093
    networks:
      - nba-network

  frontend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.react
    ports:
      - "3001:3001"
    depends_on:
      - api
    networks:
      - nba-network
    environment:
      # - REACT_APP_API_URL=http://13.48.249.166:8000
      # - PORT=3001
      # see react_frontend/src/.env to update ENV
    volumes:
      - ../react_frontend:/app
      - /app/node_modules
    stdin_open: true
    tty: true

networks:
  nba-network:
    driver: bridge

volumes:
  postgres_data: {}
  prometheus_data: {}
  grafana_data: {}